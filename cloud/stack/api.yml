AWSTemplateFormatVersion: "2010-09-09"
Description: "API used to manage EC2"


Resources:

  Gateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: !Sub "${AWS::StackName}-api"
      Tags:
        - Key: "Application"
          Value: !Ref "AWS::StackName"

  MyEnvCreateTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "${AWS::StackName}-myenv-create"

  MethodRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "allow-publish-sns"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sns:Publish"
                Resource: !Ref "MyEnvCreateTopic"

  MyEnvCreate:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: "POST"
      ResourceId: !GetAtt "Gateway.RootResourceId"
      RestApiId: !Ref "Gateway"
      AuthorizationType: "NONE"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Credentials: !GetAtt "MethodRole.Arn"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:sns:action/Publish&TopicArn=${sns}"
          - { "sns": !Ref "MyEnvCreateTopic" }

  GatewayStageDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref "Gateway"
    DependsOn:
      - "MyEnvCreate"

  GatewayStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      RestApiId: !Ref "Gateway"
      StageName: "main"
      DeploymentId: !Ref "GatewayStageDeployment"
      Tags:
        - Key: "Application"
          Value: !Ref "AWS::StackName"
